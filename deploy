#!/usr/bin/env bash


usage() {
cat << EOF
Valery bot

Fly.io based Valery bot deploy script. Fly.io CLI is required.

Usage:
    ${0} [OPTIONS]

Options:
    --new               Launch new application using fly.toml template
    --app APP           Application name to use for deploy. Overrides one in toml file
    --envs              .env file to expose inside app container (default: ${ENVS})
    --image             Docker image to use as base for the app (default: ${PYTHON_IMAGE})
    --allocate-ips      Allocate ip addresses on launch
    --debug             Set bash 'x' option
    --help              Show help message

Examples:
    Deploy new app.
    
        ./deploy --new --app mybot

    Redeploy. 
        
        ./deploy

Note:
    This script allocates shared ipv4 and ipv6 addresses that cost nothing
    Dedicated ipv4 address costs \$2/month
EOF
}

SCRIPT_DIR=$(realpath "$(dirname "${0}")")
PYTHON_IMAGE=python:3.11-bookworm
ENVS=prod.env

while [ "${#}" -gt 0 ]; do
    case "${1}" in
        -h|--help)
            usage
            exit
            ;;

        --app)
            shift
            APP_NAME="${1}"
            ;;

        --new)
            NEW=1
            ;;

        --image)
            shift
            PYTHON_IMAGE="${1}"
            ;;

        --envs)
            shift
            ENVS="${1}"
            ;;

        --allocate-ips)
            ALLOCATE_IPS=1
            ;;

        --debug)
            set -x
            ;;

        *)
            echo "Unreconginzed argument: ${1}"
            usage
            exit 1
            ;;
    esac
    
   shift
done


if [ -z "$(command -v fly)" ]; then
    curl -L https://fly.io/install.sh | sh
fi 


pushd "${SCRIPT_DIR}" &> /dev/null

set -eEu

on_exit() {
    popd &> /dev/null
}

trap on_exit EXIT

if [ -n "${APP_NAME+x}" ]; then
    FLY_TOML_FN="${SCRIPT_DIR}/fly.toml"
    sed -i "s/app = \".*\"/app = \"${APP_NAME}\"/g" "${FLY_TOML_FN}"
fi

DOCKERFILE="${SCRIPT_DIR}/Dockerfile"

echo -e "\e[36mDeploying app, environment: ${ENVS}...\e[0m"

if [ -n "${NEW+x}" ]; then
    yes no | fly launch --copy-config --path /tmp --no-deploy \
        --build-arg "BASE=${PYTHON_IMAGE}" --build-arg "ENVS=${ENVS}" \
        --dockerfile "${DOCKERFILE}" 

    if [ -n "${ALLOCATE_IPS+x}" ]; then
        fly ips allocate-v4 --shared
        fly ips allocate-v6
    fi
fi

fly deploy --dockerfile "${DOCKERFILE}" \
    --build-arg "BASE=${PYTHON_IMAGE}" --build-arg "ENVS=${ENVS}"
